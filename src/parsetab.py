
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQEQEQEQEQleftGTLTGTELTEleftSUMARESTAleftMULTIPLICACIONDIVISIONrightNOTAND ASIGNACION BOOLEANO CADENA CARACTERCITO DIVISION ENTERITO EQEQ EQEQEQ FLOTANTITO GT GTE ID IMPRIMIR LBRACE LOGIQUITO LPAREN LT LTE MULTIPLICACION NOT NUMERO OR RBRACE RESTA RPAREN SEMICOLON SHI SHINO SUMA VARIABLESITAprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : var_declaration\n                 | print_statement\n                 | if_statement\n                 | expression_statementvar_declaration : VARIABLESITA ID ASIGNACION expression SEMICOLON\n                       | ENTERITO ID ASIGNACION expression SEMICOLON\n                       | FLOTANTITO ID ASIGNACION expression SEMICOLON\n                       | CARACTERCITO ID ASIGNACION expression SEMICOLON\n                       | LOGIQUITO ID ASIGNACION expression SEMICOLONprint_statement : IMPRIMIR LPAREN expression RPAREN SEMICOLONif_statement : SHI LPAREN expression RPAREN LBRACE statement_list RBRACE else_statementelse_statement : SHINO LBRACE statement_list RBRACE\n                      | emptyexpression_statement : expression SEMICOLONexpression : expression SUMA expression\n                  | expression RESTA expression\n                  | expression MULTIPLICACION expression\n                  | expression DIVISION expression\n                  | expression EQEQ expression\n                  | expression EQEQEQ expression\n                  | expression GT expression\n                  | expression LT expression\n                  | expression GTE expression\n                  | expression LTE expression\n                  | expression AND expression\n                  | expression OR expression\n                  | NOT expressionexpression : LPAREN expression RPARENexpression : NUMERO\n                  | CADENA\n                  | BOOLEANO\n                  | IDempty :'
    
_lr_action_items = {'VARIABLESITA':([0,2,3,4,5,6,7,22,24,72,73,74,75,76,77,78,79,80,81,83,84,85,86,],[8,8,-3,-4,-5,-6,-7,-2,-17,-8,-9,-10,-11,-12,-13,8,8,-36,-14,-16,8,8,-15,]),'ENTERITO':([0,2,3,4,5,6,7,22,24,72,73,74,75,76,77,78,79,80,81,83,84,85,86,],[11,11,-3,-4,-5,-6,-7,-2,-17,-8,-9,-10,-11,-12,-13,11,11,-36,-14,-16,11,11,-15,]),'FLOTANTITO':([0,2,3,4,5,6,7,22,24,72,73,74,75,76,77,78,79,80,81,83,84,85,86,],[12,12,-3,-4,-5,-6,-7,-2,-17,-8,-9,-10,-11,-12,-13,12,12,-36,-14,-16,12,12,-15,]),'CARACTERCITO':([0,2,3,4,5,6,7,22,24,72,73,74,75,76,77,78,79,80,81,83,84,85,86,],[13,13,-3,-4,-5,-6,-7,-2,-17,-8,-9,-10,-11,-12,-13,13,13,-36,-14,-16,13,13,-15,]),'LOGIQUITO':([0,2,3,4,5,6,7,22,24,72,73,74,75,76,77,78,79,80,81,83,84,85,86,],[14,14,-3,-4,-5,-6,-7,-2,-17,-8,-9,-10,-11,-12,-13,14,14,-36,-14,-16,14,14,-15,]),'IMPRIMIR':([0,2,3,4,5,6,7,22,24,72,73,74,75,76,77,78,79,80,81,83,84,85,86,],[15,15,-3,-4,-5,-6,-7,-2,-17,-8,-9,-10,-11,-12,-13,15,15,-36,-14,-16,15,15,-15,]),'SHI':([0,2,3,4,5,6,7,22,24,72,73,74,75,76,77,78,79,80,81,83,84,85,86,],[17,17,-3,-4,-5,-6,-7,-2,-17,-8,-9,-10,-11,-12,-13,17,17,-36,-14,-16,17,17,-15,]),'NOT':([0,2,3,4,5,6,7,16,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,41,43,45,58,59,60,61,72,73,74,75,76,77,78,79,80,81,83,84,85,86,],[18,18,-3,-4,-5,-6,-7,18,18,-2,-17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-8,-9,-10,-11,-12,-13,18,18,-36,-14,-16,18,18,-15,]),'LPAREN':([0,2,3,4,5,6,7,15,16,17,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,41,43,45,58,59,60,61,72,73,74,75,76,77,78,79,80,81,83,84,85,86,],[16,16,-3,-4,-5,-6,-7,41,16,43,16,-2,-17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-8,-9,-10,-11,-12,-13,16,16,-36,-14,-16,16,16,-15,]),'NUMERO':([0,2,3,4,5,6,7,16,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,41,43,45,58,59,60,61,72,73,74,75,76,77,78,79,80,81,83,84,85,86,],[19,19,-3,-4,-5,-6,-7,19,19,-2,-17,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-8,-9,-10,-11,-12,-13,19,19,-36,-14,-16,19,19,-15,]),'CADENA':([0,2,3,4,5,6,7,16,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,41,43,45,58,59,60,61,72,73,74,75,76,77,78,79,80,81,83,84,85,86,],[20,20,-3,-4,-5,-6,-7,20,20,-2,-17,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-8,-9,-10,-11,-12,-13,20,20,-36,-14,-16,20,20,-15,]),'BOOLEANO':([0,2,3,4,5,6,7,16,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,41,43,45,58,59,60,61,72,73,74,75,76,77,78,79,80,81,83,84,85,86,],[21,21,-3,-4,-5,-6,-7,21,21,-2,-17,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-8,-9,-10,-11,-12,-13,21,21,-36,-14,-16,21,21,-15,]),'ID':([0,2,3,4,5,6,7,8,11,12,13,14,16,18,22,24,25,26,27,28,29,30,31,32,33,34,35,36,41,43,45,58,59,60,61,72,73,74,75,76,77,78,79,80,81,83,84,85,86,],[9,9,-3,-4,-5,-6,-7,23,37,38,39,40,9,9,-2,-17,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-8,-9,-10,-11,-12,-13,9,9,-36,-14,-16,9,9,-15,]),'$end':([1,2,3,4,5,6,7,22,24,72,73,74,75,76,77,80,81,83,86,],[0,-1,-3,-4,-5,-6,-7,-2,-17,-8,-9,-10,-11,-12,-13,-36,-14,-16,-15,]),'RBRACE':([3,4,5,6,7,22,24,72,73,74,75,76,77,79,80,81,83,85,86,],[-3,-4,-5,-6,-7,-2,-17,-8,-9,-10,-11,-12,-13,80,-36,-14,-16,86,-15,]),'SEMICOLON':([9,10,19,20,21,44,46,47,48,49,50,51,52,53,54,55,56,57,63,65,66,67,68,69,70,],[-35,24,-32,-33,-34,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-31,72,73,74,75,76,77,]),'SUMA':([9,10,19,20,21,42,44,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,69,],[-35,25,-32,-33,-34,25,-30,-18,-19,-20,-21,25,25,25,25,25,25,25,25,25,-31,25,25,25,25,25,25,]),'RESTA':([9,10,19,20,21,42,44,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,69,],[-35,26,-32,-33,-34,26,-30,-18,-19,-20,-21,26,26,26,26,26,26,26,26,26,-31,26,26,26,26,26,26,]),'MULTIPLICACION':([9,10,19,20,21,42,44,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,69,],[-35,27,-32,-33,-34,27,-30,27,27,-20,-21,27,27,27,27,27,27,27,27,27,-31,27,27,27,27,27,27,]),'DIVISION':([9,10,19,20,21,42,44,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,69,],[-35,28,-32,-33,-34,28,-30,28,28,-20,-21,28,28,28,28,28,28,28,28,28,-31,28,28,28,28,28,28,]),'EQEQ':([9,10,19,20,21,42,44,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,69,],[-35,29,-32,-33,-34,29,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,29,29,29,-31,29,29,29,29,29,29,]),'EQEQEQ':([9,10,19,20,21,42,44,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,69,],[-35,30,-32,-33,-34,30,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,30,30,30,-31,30,30,30,30,30,30,]),'GT':([9,10,19,20,21,42,44,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,69,],[-35,31,-32,-33,-34,31,-30,-18,-19,-20,-21,31,31,-24,-25,-26,-27,31,31,31,-31,31,31,31,31,31,31,]),'LT':([9,10,19,20,21,42,44,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,69,],[-35,32,-32,-33,-34,32,-30,-18,-19,-20,-21,32,32,-24,-25,-26,-27,32,32,32,-31,32,32,32,32,32,32,]),'GTE':([9,10,19,20,21,42,44,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,69,],[-35,33,-32,-33,-34,33,-30,-18,-19,-20,-21,33,33,-24,-25,-26,-27,33,33,33,-31,33,33,33,33,33,33,]),'LTE':([9,10,19,20,21,42,44,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,69,],[-35,34,-32,-33,-34,34,-30,-18,-19,-20,-21,34,34,-24,-25,-26,-27,34,34,34,-31,34,34,34,34,34,34,]),'AND':([9,10,19,20,21,42,44,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,69,],[-35,35,-32,-33,-34,35,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,35,35,-31,35,35,35,35,35,35,]),'OR':([9,10,19,20,21,42,44,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,69,],[-35,36,-32,-33,-34,36,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,36,-31,36,36,36,36,36,36,]),'RPAREN':([9,19,20,21,42,44,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,],[-35,-32,-33,-34,63,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,70,-31,71,]),'ASIGNACION':([23,37,38,39,40,],[45,58,59,60,61,]),'LBRACE':([71,82,],[78,84,]),'SHINO':([80,],[82,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,78,84,],[2,79,85,]),'statement':([0,2,78,79,84,85,],[3,22,3,22,3,22,]),'var_declaration':([0,2,78,79,84,85,],[4,4,4,4,4,4,]),'print_statement':([0,2,78,79,84,85,],[5,5,5,5,5,5,]),'if_statement':([0,2,78,79,84,85,],[6,6,6,6,6,6,]),'expression_statement':([0,2,78,79,84,85,],[7,7,7,7,7,7,]),'expression':([0,2,16,18,25,26,27,28,29,30,31,32,33,34,35,36,41,43,45,58,59,60,61,78,79,84,85,],[10,10,42,44,46,47,48,49,50,51,52,53,54,55,56,57,62,64,65,66,67,68,69,10,10,10,10,]),'else_statement':([80,],[81,]),'empty':([80,],[83,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','my_parser.py',19),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','my_parser.py',23),
  ('statement_list -> statement','statement_list',1,'p_statement_list','my_parser.py',24),
  ('statement -> var_declaration','statement',1,'p_statement','my_parser.py',31),
  ('statement -> print_statement','statement',1,'p_statement','my_parser.py',32),
  ('statement -> if_statement','statement',1,'p_statement','my_parser.py',33),
  ('statement -> expression_statement','statement',1,'p_statement','my_parser.py',34),
  ('var_declaration -> VARIABLESITA ID ASIGNACION expression SEMICOLON','var_declaration',5,'p_var_declaration','my_parser.py',38),
  ('var_declaration -> ENTERITO ID ASIGNACION expression SEMICOLON','var_declaration',5,'p_var_declaration','my_parser.py',39),
  ('var_declaration -> FLOTANTITO ID ASIGNACION expression SEMICOLON','var_declaration',5,'p_var_declaration','my_parser.py',40),
  ('var_declaration -> CARACTERCITO ID ASIGNACION expression SEMICOLON','var_declaration',5,'p_var_declaration','my_parser.py',41),
  ('var_declaration -> LOGIQUITO ID ASIGNACION expression SEMICOLON','var_declaration',5,'p_var_declaration','my_parser.py',42),
  ('print_statement -> IMPRIMIR LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','my_parser.py',46),
  ('if_statement -> SHI LPAREN expression RPAREN LBRACE statement_list RBRACE else_statement','if_statement',8,'p_if_statement','my_parser.py',50),
  ('else_statement -> SHINO LBRACE statement_list RBRACE','else_statement',4,'p_else_statement','my_parser.py',54),
  ('else_statement -> empty','else_statement',1,'p_else_statement','my_parser.py',55),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','my_parser.py',62),
  ('expression -> expression SUMA expression','expression',3,'p_expression','my_parser.py',66),
  ('expression -> expression RESTA expression','expression',3,'p_expression','my_parser.py',67),
  ('expression -> expression MULTIPLICACION expression','expression',3,'p_expression','my_parser.py',68),
  ('expression -> expression DIVISION expression','expression',3,'p_expression','my_parser.py',69),
  ('expression -> expression EQEQ expression','expression',3,'p_expression','my_parser.py',70),
  ('expression -> expression EQEQEQ expression','expression',3,'p_expression','my_parser.py',71),
  ('expression -> expression GT expression','expression',3,'p_expression','my_parser.py',72),
  ('expression -> expression LT expression','expression',3,'p_expression','my_parser.py',73),
  ('expression -> expression GTE expression','expression',3,'p_expression','my_parser.py',74),
  ('expression -> expression LTE expression','expression',3,'p_expression','my_parser.py',75),
  ('expression -> expression AND expression','expression',3,'p_expression','my_parser.py',76),
  ('expression -> expression OR expression','expression',3,'p_expression','my_parser.py',77),
  ('expression -> NOT expression','expression',2,'p_expression','my_parser.py',78),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','my_parser.py',85),
  ('expression -> NUMERO','expression',1,'p_expression_literal','my_parser.py',89),
  ('expression -> CADENA','expression',1,'p_expression_literal','my_parser.py',90),
  ('expression -> BOOLEANO','expression',1,'p_expression_literal','my_parser.py',91),
  ('expression -> ID','expression',1,'p_expression_literal','my_parser.py',92),
  ('empty -> <empty>','empty',0,'p_empty','my_parser.py',96),
]
